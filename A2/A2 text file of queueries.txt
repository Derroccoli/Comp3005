A2 text file of queueries

2.
a) SELECT title FROM Books

b) SELECT first_name, last_name FROM Members WHERE join_date > '2023-01-01'

c)
--coalesce function will handle the NULL if a member does not have any books borrowed
SELECT 
    m.first_name,
    m.last_name,
    COALESCE(COUNT(b.borrow_id), 0) AS total_books
FROM Members m
LEFT JOIN Borrowing b ON m.member_id = b.member_id
GROUP BY m.first_name, m.last_name

d)
SELECT
	a.first_name,
	a.last_name
FROM Authors a
JOIN Books b ON a.author_id = b.author_id
GROUP BY a.first_name, a.last_name
HAVING COUNT(b.book_id) > 1

e)
SELECT
	m.first_name,
	m.last_name
FROM Members m
LEFT JOIN Borrowing b ON  m.member_id = b.member_id
WHERE borrow_id is NULL

f)
SELECT
	title,
	published_date
FROM Books
ORDER BY published_date DESC
LIMIT 1

g)
SELECT 
	p.publisher_name,
	COUNT(b.book_id) AS total_books
FROM Publishers p
JOIN Books b ON p.publisher_id = b.publisher_id
GROUP BY p.publisher_name
ORDER BY total_books DESC

h)
SELECT
	b.title
FROM Books b
LEFT JOIN Borrowing c ON c.book_id = b.book_id
WHERE borrow_id IS NULL

i)
--Join members with borrowing, borrowing with book, and books with author
SELECT
	m.first_name,
	m.last_name
FROM Members m
JOIN Borrowing b ON m.member_id = b.member_id
JOIN Books c ON b.book_id = c.book_id
JOIN Authors a ON c.author_id = a.author_id
WHERE a.first_name = 'J.K.' AND a.last_name = 'Rowling'

j)
SELECT
	a.first_name,
	a.last_name
FROM Authors a
LEFT JOIN Books b ON a.author_id = b.author_id
LEFT JOIN Borrowing c ON b.book_id = c.book_id
GROUP BY a.first_name, a.last_name
HAVING COUNT(c.borrow_id) > 3
